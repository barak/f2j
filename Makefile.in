#  Top level makefile for the f2j system.

# $Author$
# $Date$
# $Source$
# $Revision$

F2J_PACKAGE_NAME=@F2J_PACKAGE_STRING@

all:	f2java javab

install:
	cd util; $(MAKE) install
	cd goto_trans; $(MAKE) install
	cd libbytecode; $(MAKE) install
	cd src; $(MAKE) install

libbytecode/libbytecode.a:
	cd libbytecode; $(MAKE)
	
util/f2jutil.jar:
	cd util; $(MAKE)

f2java: libbytecode/libbytecode.a util/f2jutil.jar
	cd src; $(MAKE)

javab:
	cd goto_trans; $(MAKE)

srcdist: srcdist_common
	zip -r $(F2J_PACKAGE_NAME).zip $(F2J_PACKAGE_NAME)

srcdist_tgz: srcdist_common
	tar cvf - $(F2J_PACKAGE_NAME) | gzip > $(F2J_PACKAGE_NAME).tgz

srcdist_common:
	cd src; $(MAKE) y.tab.c
	mkdir -p $(F2J_PACKAGE_NAME)/bin
	mkdir -p $(F2J_PACKAGE_NAME)/src
	mkdir -p $(F2J_PACKAGE_NAME)/libbytecode/testing
	mkdir -p $(F2J_PACKAGE_NAME)/goto_trans
	mkdir -p $(F2J_PACKAGE_NAME)/util/org/netlib/util
	cd goto_trans; cp *.[ch] make.def.in README LICENSE Makefile ../$(F2J_PACKAGE_NAME)/goto_trans
	cd libbytecode; cp *.[ch] *.in configure ../$(F2J_PACKAGE_NAME)/libbytecode
	cd libbytecode/testing; cp *.c *.correct *.output *.java Makefile.in ../../$(F2J_PACKAGE_NAME)/libbytecode/testing
	cd src; cp *.[chy] make.def.in LICENSE Makefile ../$(F2J_PACKAGE_NAME)/src
	cd util; cp make.def.in Makefile ../$(F2J_PACKAGE_NAME)/util
	cd util; cp -r org ../$(F2J_PACKAGE_NAME)/util
	cp README install-sh configure configure.in f2j_TODO.txt Makefile.in $(F2J_PACKAGE_NAME)

clean:
	/bin/rm -rf $(F2J_PACKAGE_NAME) $(F2J_PACKAGE_NAME).tgz f2jsrc.tgz f2jsrc.zip
	cd goto_trans; $(MAKE) realclean
	cd libbytecode; $(MAKE) clean
	cd src; $(MAKE) clean
	cd util; $(MAKE) clean
	cd doc; $(MAKE) clean

configclean: clean
	cd libbytecode; $(MAKE) configclean
	/bin/rm -rf autom4te.cache 
	/bin/rm -f config.log config.status config.cache Makefile src/make.def
	/bin/rm -f configure goto_trans/make.def util/make.def
